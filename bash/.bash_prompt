
# Colors!
# -------

# Background              45 45 45
# Current Line            39 39 39
# Selection               81 81 81
# Foreground              204 204 204
# Comment                 153 153 153
# Red                     242 119 122
# Orange                  249 145 87
# Yellow                  255 204 102
# Green                   153 204 153
# Aqua                    102 204 204
# Blue                    102 153 204
# Purple                  204 153 204
# Bold Red                218  88  92
# Bold Orange             228 118  57
# Bold Yellow             232 179  71
# Bold Green              124 179 124
# Bold Aqua                76 184 184
# Bold Blue                76 129 184
# Bold Purple             179 124 179

# Normal Colors
Black="\[\e[0;30m\]"        # Black
Red="\[\e[0;31m\]"          # Red
Green="\[\e[0;32m\]"        # Green
Yellow="\[\e[0;33m\]"       # Yellow
Blue="\[\e[0;34m\]"         # Blue
Purple="\[\e[0;35m\]"       # Purple
Cyan="\[\e[0;36m\]"         # Cyan
White="\[\e[0;37m\]"        # White

# Bold
BBlack="\[\e[1;30m\]"       # Black
BRed="\[\e[1;31m\]"         # Red
BGreen="\[\e[1;32m\]"       # Green
BYellow="\[\e[1;33m\]"      # Yellow
BBlue="\[\e[1;34m\]"        # Blue
BPurple="\[\e[1;35m\]"      # Purple
BCyan="\[\e[1;36m\]"        # Cyan
BWhite="\[\e[1;37m\]"       # White

# Background
On_Black="\[\e[40m\]"       # Black
On_Red="\[\e[41m\]"         # Red
On_Green="\[\e[42m\]"       # Green
On_Yellow="\[\e[43m\]"      # Yellow
On_Blue="\[\e[44m\]"        # Blue
On_Purple="\[\e[45m\]"      # Purple
On_Cyan="\[\e[46m\]"        # Cyan
On_White="\[\e[47m\]"       # White

NC="\[\e[m"               # Color Reset

default_username='cerebraethos'

# Fastest possible way to check if repo is dirty. a savior for the WebKit repo.
function parse_git_dirty() {
   git diff --quiet --ignore-submodules HEAD 2>/dev/null; [ $? -eq 1 ] && echo '*'
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Only show username/host if not default
function usernamehost() {
	if [ $USER != $default_username ]; then echo "${Blue}\u ${White}at ${Yellow}$HOSTNAME ${White}in "; fi
}

PS1="\n"
# PS1="$PS1${Blue}\$(usernamehost)${Cyan}\w${White}\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")${Red}\$(parse_git_branch)\n${Green}$ ${NC}"
PS1="$PS1${Blue}\$(usernamehost)"
PS1="$PS1${Cyan}\w"
PS1="$PS1${White}\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")"
PS1="$PS1${Red}\$(parse_git_branch)\n"
PS1="$PS1${Green}$ ${NC}"